{"ast":null,"code":"const responseInterceptors = [{\n  name: 'formatResponse',\n\n  success(response) {\n    return response.data;\n  }\n\n}];\nconst requestInterceptors = [{\n  name: 'addHttpRequestHeader',\n\n  success(config) {\n    config.headers['Access-Control-Allow-Origin'] = '*'; //config.headers['Authorization'] = `Bearer ${window.localStorage.getItem('personal-app-token')}`;\n\n    return config;\n  },\n\n  fail(err) {\n    console.error('request error: ', err);\n    return Promise.reject(err);\n  }\n\n}];\nconst interceptors = {\n  response: responseInterceptors,\n  request: requestInterceptors\n};\n\nfunction doInstall(instance, options = {}) {\n  const {\n    type\n  } = options;\n  interceptors[type].forEach(interceptor => {\n    const {\n      success,\n      fail\n    } = interceptor;\n    instance.interceptors[type].use(success, fail);\n  });\n}\n\nexport function install(instance, option = {}) {\n  doInstall(instance, {\n    type: 'response'\n  });\n  doInstall(instance, {\n    type: 'request'\n  });\n}","map":{"version":3,"sources":["F:/Project/walkspanDeploy/src/utils/interceptors.js"],"names":["responseInterceptors","name","success","response","data","requestInterceptors","config","headers","fail","err","console","error","Promise","reject","interceptors","request","doInstall","instance","options","type","forEach","interceptor","use","install","option"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,CACzB;AACIC,EAAAA,IAAI,EAAE,gBADV;;AAEIC,EAAAA,OAAO,CAACC,QAAD,EAAW;AACd,WAAOA,QAAQ,CAACC,IAAhB;AACH;;AAJL,CADyB,CAA7B;AASA,MAAMC,mBAAmB,GAAG,CACxB;AACIJ,EAAAA,IAAI,EAAE,sBADV;;AAEIC,EAAAA,OAAO,CAACI,MAAD,EAAS;AACZA,IAAAA,MAAM,CAACC,OAAP,CAAe,6BAAf,IAAgD,GAAhD,CADY,CAEZ;;AACA,WAAOD,MAAP;AACH,GANL;;AAOIE,EAAAA,IAAI,CAACC,GAAD,EAAM;AACNC,IAAAA,OAAO,CAACC,KAAR,CAAc,iBAAd,EAAiCF,GAAjC;AACA,WAAOG,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAAP;AACH;;AAVL,CADwB,CAA5B;AAeA,MAAMK,YAAY,GAAG;AACjBX,EAAAA,QAAQ,EAAEH,oBADO;AAEjBe,EAAAA,OAAO,EAAEV;AAFQ,CAArB;;AAKA,SAASW,SAAT,CAAmBC,QAAnB,EAA6BC,OAAO,GAAE,EAAtC,EAA2C;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,OAAjB;AACAJ,EAAAA,YAAY,CAACK,IAAD,CAAZ,CACKC,OADL,CACcC,WAAD,IAAiB;AACtB,UAAM;AAAEnB,MAAAA,OAAF;AAAWM,MAAAA;AAAX,QAAoBa,WAA1B;AACAJ,IAAAA,QAAQ,CAACH,YAAT,CAAsBK,IAAtB,EAA4BG,GAA5B,CAAgCpB,OAAhC,EAAyCM,IAAzC;AACH,GAJL;AAKH;;AAED,OAAO,SAASe,OAAT,CAAiBN,QAAjB,EAA2BO,MAAM,GAAG,EAApC,EAAwC;AAC3CR,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChBE,IAAAA,IAAI,EAAE;AADU,GAAX,CAAT;AAGAH,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChBE,IAAAA,IAAI,EAAE;AADU,GAAX,CAAT;AAGH","sourcesContent":["const responseInterceptors = [\r\n    {\r\n        name: 'formatResponse',\r\n        success(response) {\r\n            return response.data;\r\n        }\r\n    },\r\n];\r\n\r\nconst requestInterceptors = [\r\n    {\r\n        name: 'addHttpRequestHeader',\r\n        success(config) {\r\n            config.headers['Access-Control-Allow-Origin'] = '*';\r\n            //config.headers['Authorization'] = `Bearer ${window.localStorage.getItem('personal-app-token')}`;\r\n            return config;\r\n        },\r\n        fail(err) {\r\n            console.error('request error: ', err);\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n]\r\n\r\nconst interceptors = {\r\n    response: responseInterceptors,\r\n    request: requestInterceptors\r\n};\r\n\r\nfunction doInstall(instance, options= { }) {\r\n    const { type } = options;\r\n    interceptors[type]\r\n        .forEach((interceptor) => {\r\n            const { success, fail } = interceptor;\r\n            instance.interceptors[type].use(success, fail);\r\n        })\r\n}\r\n\r\nexport function install(instance, option = {}) {\r\n    doInstall(instance, {\r\n        type: 'response',\r\n    });\r\n    doInstall(instance, {\r\n        type: 'request',\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}