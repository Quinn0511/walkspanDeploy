{"ast":null,"code":"import \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"F:\\\\Project\\\\walkspanDeploy\\\\src\\\\pages\\\\widgets\\\\WidgetPanel\\\\DisplayComponent.js\";\nimport React, { useContext, useState } from \"react\";\nimport styles from \"./DisplayComponent.module.less\";\nimport { MyContext } from \"../../../temporary/context-manager\";\nconst {\n  Option\n} = _Select;\nconst showOptions = [{\n  label: \"Speedometer View\",\n  value: \"Speedometer View\",\n  id: 1,\n  isChecked: false\n}, {\n  label: \"Show Description\",\n  value: \"Show Description\",\n  id: 2,\n  isChecked: true\n}, {\n  label: \"Show Icons\",\n  value: \"Show Icons\",\n  id: 3,\n  isChecked: false\n}, {\n  label: \"Show Feature Name\",\n  value: \"Show Feature Name\",\n  id: 4,\n  isChecked: true\n}];\n\nconst DispalyComponent = () => {\n  const {\n    setScopeSelect,\n    setCheckedView\n  } = useContext(MyContext);\n  const [viewCheck, setViewCheck] = useState(showOptions);\n\n  const checkedViewChange = checkedList => {\n    const list = [{\n      label: \"Speedometer View\",\n      value: \"Speedometer View\",\n      id: 1,\n      isChecked: false\n    }, {\n      label: \"Show Description\",\n      value: \"Show Description\",\n      id: 2,\n      isChecked: false\n    }, {\n      label: \"Show Icons\",\n      value: \"Show Icons\",\n      id: 3,\n      isChecked: false\n    }, {\n      label: \"Show Feature Name\",\n      value: \"Show Feature Name\",\n      id: 4,\n      isChecked: false\n    }];\n    list.map(item => {\n      for (let checked of checkedList) {\n        if (checked === item.value) {\n          item.isChecked = true;\n        }\n      }\n\n      return;\n    });\n    setCheckedView(list);\n    setViewCheck(list);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \" Select Scope\"), /*#__PURE__*/React.createElement(_Select, {\n    placeholder: \"Select a scopre\",\n    className: styles.scopeSelect,\n    onChange: e => setScopeSelect(e),\n    defaultValue: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Block\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"quarterMile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Quarter Mile\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"neighborhood\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Neighborhood\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Checkbox.Group, {\n    options: viewCheck,\n    className: styles.showGroup,\n    onChange: checkedViewChange,\n    defaultValue: [\"Show Feature Name\", \"Show Description\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DispalyComponent;","map":{"version":3,"sources":["F:/Project/walkspanDeploy/src/pages/widgets/WidgetPanel/DisplayComponent.js"],"names":["React","useContext","useState","styles","MyContext","Option","showOptions","label","value","id","isChecked","DispalyComponent","setScopeSelect","setCheckedView","viewCheck","setViewCheck","checkedViewChange","checkedList","list","map","item","checked","subTitle","scopeSelect","e","marginTop","showGroup"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport styles from \"./DisplayComponent.module.less\";\r\nimport { MyContext } from \"../../../temporary/context-manager\";\r\n\r\nimport { Checkbox, Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\nconst showOptions = [\r\n  {\r\n    label: \"Speedometer View\",\r\n    value: \"Speedometer View\",\r\n    id: 1,\r\n    isChecked: false,\r\n  },\r\n  {\r\n    label: \"Show Description\",\r\n    value: \"Show Description\",\r\n    id: 2,\r\n    isChecked: true,\r\n  },\r\n  {\r\n    label: \"Show Icons\",\r\n    value: \"Show Icons\",\r\n    id: 3,\r\n    isChecked: false,\r\n  },\r\n  {\r\n    label: \"Show Feature Name\",\r\n    value: \"Show Feature Name\",\r\n    id: 4,\r\n    isChecked: true,\r\n  },\r\n];\r\n\r\nconst DispalyComponent = () => {\r\n  const { setScopeSelect, setCheckedView } = useContext(MyContext);\r\n  const [viewCheck, setViewCheck] = useState(showOptions);\r\n  const checkedViewChange = (checkedList) => {\r\n    const list = [\r\n      {\r\n        label: \"Speedometer View\",\r\n        value: \"Speedometer View\",\r\n        id: 1,\r\n        isChecked: false,\r\n      },\r\n      {\r\n        label: \"Show Description\",\r\n        value: \"Show Description\",\r\n        id: 2,\r\n        isChecked: false,\r\n      },\r\n      {\r\n        label: \"Show Icons\",\r\n        value: \"Show Icons\",\r\n        id: 3,\r\n        isChecked: false,\r\n      },\r\n      {\r\n        label: \"Show Feature Name\",\r\n        value: \"Show Feature Name\",\r\n        id: 4,\r\n        isChecked: false,\r\n      },\r\n    ];\r\n\r\n    list.map((item) => {\r\n      for (let checked of checkedList) {\r\n        if (checked === item.value) {\r\n          item.isChecked = true;\r\n        }\r\n      }\r\n      return;\r\n    });\r\n    setCheckedView(list);\r\n    setViewCheck(list);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.subTitle}> Select Scope</div>\r\n\r\n      <Select\r\n        placeholder=\"Select a scopre\"\r\n        className={styles.scopeSelect}\r\n        onChange={(e) => setScopeSelect(e)}\r\n        defaultValue=\"block\"\r\n      >\r\n        <Option value=\"block\">Block</Option>\r\n        <Option value=\"quarterMile\">Quarter Mile</Option>\r\n        <Option value=\"neighborhood\">Neighborhood</Option>\r\n      </Select>\r\n      <div style={{ marginTop: \"30px\" }}>\r\n        <Checkbox.Group\r\n          options={viewCheck}\r\n          className={styles.showGroup}\r\n          onChange={checkedViewChange}\r\n          defaultValue={[\"Show Feature Name\", \"Show Description\"]}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DispalyComponent;\r\n"]},"metadata":{},"sourceType":"module"}