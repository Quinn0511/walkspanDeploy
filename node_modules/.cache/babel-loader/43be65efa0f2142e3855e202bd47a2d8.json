{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"F:\\\\Project\\\\walkspanDeploy\\\\src\\\\pages\\\\homepage\\\\contact.jsx\";\n\n/*homepage.jsx*/\nimport React, { useEffect, useState } from \"react\";\nimport \"./homePageStyles.css\";\nimport styles from \"./contact.module.less\";\nimport InputItem from \"../../component/InputItem\";\nimport contactFormImage from \"../../img/homepage/contact-form.png\";\nimport { postMessage } from \"../../actions/contact\";\nimport { useDispatch, useMappedState } from \"redux-react-hook\";\nconst {\n  TextArea\n} = _Input;\n\nconst mapStateContact = state => state.contact;\n\nconst Contact = () => {\n  const dispatch = useDispatch();\n\n  const [form] = _Form.useForm();\n\n  const [message_text, setMessageText] = useState();\n  const {\n    PostContactMessageResult\n  } = useMappedState(mapStateContact);\n\n  const handleFinish = values => {\n    let params = new URLSearchParams();\n    params.append(\"companyName\", values.companyName);\n    params.append(\"email\", values.email);\n    params.append(\"name\", values.name);\n    params.append(\"phone\", values.phone);\n    params.append(\"subject\", values.subject);\n    params.append(\"message\", message_text);\n    form.validateFields([\"email\", \"name\", \"phone\", \"subject\", \"message_text\"]).then(() => {\n      dispatch(postMessage(params));\n    }).catch(errorInfo => {\n      console.log(errorInfo);\n    });\n  };\n\n  useEffect(() => {\n    if (PostContactMessageResult === undefined) return;\n\n    if (PostContactMessageResult.status === \"Successfully\") {\n      _notification[\"success\"]({\n        message: \"Commit a Message Successfully\",\n        description: \"Thank you! We received your message, and we will reply to you in 3-5 workdays.\"\n      });\n    } else {\n      _notification[\"error\"]({\n        message: \"Failed\",\n        description: \"Something went wrong, please try again latter.\"\n      });\n    }\n  }, [PostContactMessageResult]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"page-section\",\n    id: \"contact\",\n    style: {\n      backgroundImage: `url(${contactFormImage})`,\n      backgroundSize: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Request A Demo\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"section-subheading text-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Please fill the form below.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.contact_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    form: form,\n    onFinish: handleFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputItem, {\n    name: \"name\",\n    placeholder: \"Your Name *\",\n    size: \"large\",\n    rules: [{\n      required: true,\n      message: \"Please input the name\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputItem, {\n    name: \"email\",\n    placeholder: \"Your Email *\",\n    size: \"large\",\n    rules: [{\n      required: true,\n      message: \"Please input the email\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputItem, {\n    name: \"phone\",\n    placeholder: \"Your Phone *\",\n    size: \"large\",\n    rules: [{\n      required: true,\n      message: \"Please input the phone\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputItem, {\n    name: \"companyName\",\n    placeholder: \"Your Company Name\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputItem, {\n    name: \"subject\",\n    placeholder: \"Subject *\",\n    size: \"large\",\n    rules: [{\n      required: true,\n      message: \"Please input the subject\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    className: styles.message,\n    placeholder: \"Your Message *\",\n    name: \"message_text\",\n    value: message_text,\n    onChange: e => setMessageText(e.target.value),\n    rules: [{\n      required: true,\n      message: \"Please input the message\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    size: \"large\",\n    htmlType: \"submit\",\n    className: styles.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Send Message\")))))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["F:/Project/walkspanDeploy/src/pages/homepage/contact.jsx"],"names":["React","useEffect","useState","styles","InputItem","contactFormImage","postMessage","useDispatch","useMappedState","TextArea","mapStateContact","state","contact","Contact","dispatch","form","useForm","message_text","setMessageText","PostContactMessageResult","handleFinish","values","params","URLSearchParams","append","companyName","email","name","phone","subject","validateFields","then","catch","errorInfo","console","log","undefined","status","message","description","backgroundImage","backgroundSize","contact_form","required","e","target","value","submit"],"mappings":"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","sourcesContent":["/*homepage.jsx*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./homePageStyles.css\";\r\nimport { Form, Button, Input, notification } from \"antd\";\r\nimport styles from \"./contact.module.less\";\r\nimport InputItem from \"../../component/InputItem\";\r\nimport contactFormImage from \"../../img/homepage/contact-form.png\";\r\nimport { postMessage } from \"../../actions/contact\";\r\nimport { useDispatch, useMappedState } from \"redux-react-hook\";\r\n\r\nconst { TextArea } = Input;\r\nconst mapStateContact = (state) => state.contact;\r\n\r\nconst Contact = () => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const [message_text, setMessageText] = useState();\r\n  const { PostContactMessageResult } = useMappedState(mapStateContact);\r\n\r\n  const handleFinish = (values) => {\r\n    let params = new URLSearchParams();\r\n    params.append(\"companyName\", values.companyName);\r\n    params.append(\"email\", values.email);\r\n    params.append(\"name\", values.name);\r\n    params.append(\"phone\", values.phone);\r\n    params.append(\"subject\", values.subject);\r\n    params.append(\"message\", message_text);\r\n    form\r\n      .validateFields([\"email\", \"name\", \"phone\", \"subject\", \"message_text\"])\r\n      .then(() => {\r\n        dispatch(postMessage(params));\r\n      })\r\n      .catch((errorInfo) => {\r\n        console.log(errorInfo);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (PostContactMessageResult === undefined) return;\r\n\r\n    if (PostContactMessageResult.status === \"Successfully\") {\r\n      notification[\"success\"]({\r\n        message: \"Commit a Message Successfully\",\r\n        description:\r\n          \"Thank you! We received your message, and we will reply to you in 3-5 workdays.\",\r\n      });\r\n    } else {\r\n      notification[\"error\"]({\r\n        message: \"Failed\",\r\n        description: \"Something went wrong, please try again latter.\",\r\n      });\r\n    }\r\n  }, [PostContactMessageResult]);\r\n  return (\r\n    <div>\r\n      <section\r\n        className=\"page-section\"\r\n        id=\"contact\"\r\n        style={{\r\n          backgroundImage: `url(${contactFormImage})`,\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"section-heading\">Request A Demo</h2>\r\n            <h3 className=\"section-subheading text-light\">\r\n              Please fill the form below.\r\n            </h3>\r\n          </div>\r\n\r\n          <div className={styles.contact_form}>\r\n            <Form form={form} onFinish={handleFinish}>\r\n              <InputItem\r\n                name=\"name\"\r\n                placeholder=\"Your Name *\"\r\n                size=\"large\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input the name\",\r\n                  },\r\n                ]}\r\n              />\r\n              <InputItem\r\n                name=\"email\"\r\n                placeholder=\"Your Email *\"\r\n                size=\"large\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input the email\",\r\n                  },\r\n                ]}\r\n              />\r\n              <InputItem\r\n                name=\"phone\"\r\n                placeholder=\"Your Phone *\"\r\n                size=\"large\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input the phone\",\r\n                  },\r\n                ]}\r\n              />\r\n              <InputItem\r\n                name=\"companyName\"\r\n                placeholder=\"Your Company Name\"\r\n                size=\"large\"\r\n              />\r\n              <InputItem\r\n                name=\"subject\"\r\n                placeholder=\"Subject *\"\r\n                size=\"large\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input the subject\",\r\n                  },\r\n                ]}\r\n              />\r\n              <Form.Item>\r\n                <TextArea\r\n                  rows={4}\r\n                  className={styles.message}\r\n                  placeholder=\"Your Message *\"\r\n                  name=\"message_text\"\r\n                  value={message_text}\r\n                  onChange={(e) => setMessageText(e.target.value)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input the message\",\r\n                    },\r\n                  ]}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                  htmlType=\"submit\"\r\n                  className={styles.submit}\r\n                >\r\n                  Send Message\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}