{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\walkspanDeploy\\\\src\\\\temporary\\\\GoogleAddressComplete.js\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport '../pages/api/apiStyles.css';\nimport { MyContext } from './context-manager';\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(autoCompleteRef.current);\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n  autoComplete.addListener(\"place_changed\", () => handlePlaceSelect(updateQuery));\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  console.log(addressObject);\n}\n\nfunction GoogleAddressComplete() {\n  const {\n    setAddress\n  } = useContext(MyContext);\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n  useEffect(() => {\n    loadScript(`https://maps.googleapis.com/maps/api/js?key=AIzaSyBOXYeVd2IW4rON6FTyLBesJOG87NE3BJo&libraries=places`, () => handleScriptLoad(setQuery, autoCompleteRef));\n  }, []);\n  useEffect(() => {\n    setAddress(query);\n  }, [query]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: autoCompleteRef,\n    onChange: event => {\n      setQuery(event.target.value);\n    } // placeholder=\"573 Hudson St, New York, NY 10014, USA\"\n    ,\n    placeholder: \"Input a address\",\n    value: query,\n    className: \"api-address-search\",\n    id: \"address-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default GoogleAddressComplete;","map":{"version":3,"sources":["F:/Project/walkspanDeploy/src/temporary/GoogleAddressComplete.js"],"names":["React","useState","useEffect","useRef","useContext","MyContext","autoComplete","loadScript","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","formatted_address","console","log","GoogleAddressComplete","setAddress","setQuery","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport '../pages/api/apiStyles.css';\r\nimport { MyContext } from './context-manager';\r\n\r\nlet autoComplete;\r\n\r\nconst loadScript = (url, callback) => {\r\n    let script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n\r\n    if (script.readyState) {\r\n        script.onreadystatechange = function() {\r\n            if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n                script.onreadystatechange = null;\r\n                callback();\r\n            }\r\n        };\r\n    } else {\r\n        script.onload = () => callback();\r\n    }\r\n\r\n    script.src = url;\r\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\r\n    autoComplete = new window.google.maps.places.Autocomplete(\r\n        autoCompleteRef.current\r\n    );\r\n    autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n    autoComplete.addListener(\"place_changed\", () =>\r\n        handlePlaceSelect(updateQuery)\r\n    );\r\n}\r\n\r\nasync function handlePlaceSelect(updateQuery) {\r\n    const addressObject = autoComplete.getPlace();\r\n    const query = addressObject.formatted_address;\r\n    updateQuery(query);\r\n    console.log(addressObject);\r\n}\r\n\r\nfunction GoogleAddressComplete() {\r\n    const {setAddress} = useContext(MyContext);\r\n    const [query, setQuery] = useState(\"\");\r\n    const autoCompleteRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        loadScript(\r\n            `https://maps.googleapis.com/maps/api/js?key=AIzaSyBOXYeVd2IW4rON6FTyLBesJOG87NE3BJo&libraries=places`,\r\n            () => handleScriptLoad(setQuery, autoCompleteRef)\r\n        );\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        setAddress(query)\r\n    }, [query])\r\n\r\n    return (\r\n\r\n        <div className=\"form-group\">\r\n            <input\r\n                ref={autoCompleteRef}\r\n                onChange={event => {\r\n                    setQuery(event.target.value);\r\n                }}\r\n                // placeholder=\"573 Hudson St, New York, NY 10014, USA\"\r\n                placeholder=\"Input a address\"\r\n                value={query}\r\n                className=\"api-address-search\"\r\n                id=\"address-selector\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoogleAddressComplete;"]},"metadata":{},"sourceType":"module"}