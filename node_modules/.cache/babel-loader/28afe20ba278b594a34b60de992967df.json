{"ast":null,"code":"import * as api from \"../api/widget\";\nimport { GET_WIDGET, GET_USER_WIDGET, ADD_USER_WIDGET } from \"../constants/actions\";\nexport function getWidget(params = {}) {\n  return async dispatch => {\n    const result = await api.getWidget(params); // the data type would be: \n    //\"GetPartDataJson({\"JSonDataFinal\":{\"Block\":{\"Nature\":\"1.00\",\"Interest\":\"3.00\",\"Architecture\":\"3.00...\"\n    // to remove GetPartDataJson(\n\n    var widgetResult = JSON.parse(result.slice(16, result.length - 1));\n    dispatch({\n      type: GET_WIDGET,\n      payload: {\n        address: params.address,\n        scores: widgetResult.JSonDataFinal\n      }\n    });\n  };\n}\nexport function addUserWidget(params = {}) {\n  return async dispatch => {\n    const widgetResult = await api.addUserWidget(params);\n    dispatch({\n      type: ADD_USER_WIDGET,\n      payload: {\n        result: widgetResult.result,\n        status: widgetResult.status\n      }\n    });\n  };\n}\nexport function getUserWidgetByUserID(params = {}) {\n  return async dispatch => {\n    const result = await api.getUserWidgetByID(params); // the data type would be: \n    //\"GetPartDataJson({\"JSonDataFinal\":{\"Block\":{\"Nature\":\"1.00\",\"Interest\":\"3.00\",\"Architecture\":\"3.00...\"\n    // to remove GetPartDataJson(\n\n    console.log(result);\n    let id = result.result[0].user_id;\n    let userWidgets = Object.values(result.result);\n    dispatch({\n      type: GET_USER_WIDGET,\n      payload: {\n        userId: id,\n        userWidget: userWidgets\n      }\n    });\n  };\n}","map":{"version":3,"sources":["F:/Project/walkspanDeploy/src/actions/widget.js"],"names":["api","GET_WIDGET","GET_USER_WIDGET","ADD_USER_WIDGET","getWidget","params","dispatch","result","widgetResult","JSON","parse","slice","length","type","payload","address","scores","JSonDataFinal","addUserWidget","status","getUserWidgetByUserID","getUserWidgetByID","console","log","id","user_id","userWidgets","Object","values","userId","userWidget"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,eAArB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,eAAtC,QAA6D,sBAA7D;AAEA,OAAO,SAASC,SAAT,CAAmBC,MAAM,GAAG,EAA5B,EAAgC;AACrC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,MAAM,GAAG,MAAMP,GAAG,CAACI,SAAJ,CAAcC,MAAd,CAArB,CADyB,CAEzB;AACA;AACA;;AACA,QAAIG,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,KAAP,CAAa,EAAb,EAAiBJ,MAAM,CAACK,MAAP,GAAc,CAA/B,CAAX,CAAnB;AACAN,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEZ,UADC;AAEPa,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAEV,MAAM,CAACU,OADT;AAEPC,QAAAA,MAAM,EAAER,YAAY,CAACS;AAFd;AAFF,KAAD,CAAR;AAOD,GAbD;AAcD;AAED,OAAO,SAASC,aAAT,CAAuBb,MAAM,GAAG,EAAhC,EAAoC;AACzC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAME,YAAY,GAAG,MAAMR,GAAG,CAACkB,aAAJ,CAAkBb,MAAlB,CAA3B;AACAC,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEV,eADC;AAEPW,MAAAA,OAAO,EAAE;AACPP,QAAAA,MAAM,EAAEC,YAAY,CAACD,MADd;AAEPY,QAAAA,MAAM,EAAEX,YAAY,CAACW;AAFd;AAFF,KAAD,CAAR;AAOD,GATD;AAUD;AAGD,OAAO,SAASC,qBAAT,CAA+Bf,MAAM,GAAG,EAAxC,EAA4C;AACjD,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,MAAM,GAAG,MAAMP,GAAG,CAACqB,iBAAJ,CAAsBhB,MAAtB,CAArB,CADyB,CAEzB;AACA;AACA;;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACA,QAAIiB,EAAE,GAAGjB,MAAM,CAACA,MAAP,CAAc,CAAd,EAAiBkB,OAA1B;AACA,QAAIC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcrB,MAAM,CAACA,MAArB,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEX,eADC;AAEPY,MAAAA,OAAO,EAAE;AACPe,QAAAA,MAAM,EAAEL,EADD;AAEPM,QAAAA,UAAU,EAAEJ;AAFL;AAFF,KAAD,CAAR;AAOD,GAhBD;AAiBD","sourcesContent":["import * as api from \"../api/widget\";\r\nimport { GET_WIDGET, GET_USER_WIDGET, ADD_USER_WIDGET } from \"../constants/actions\";\r\n\r\nexport function getWidget(params = {}) {\r\n  return async (dispatch) => {\r\n    const result = await api.getWidget(params);\r\n    // the data type would be: \r\n    //\"GetPartDataJson({\"JSonDataFinal\":{\"Block\":{\"Nature\":\"1.00\",\"Interest\":\"3.00\",\"Architecture\":\"3.00...\"\r\n    // to remove GetPartDataJson(\r\n    var widgetResult = JSON.parse(result.slice(16, result.length-1));\r\n    dispatch({\r\n      type: GET_WIDGET,\r\n      payload: {\r\n        address: params.address,\r\n        scores: widgetResult.JSonDataFinal,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function addUserWidget(params = {}) {\r\n  return async (dispatch) => {\r\n    const widgetResult = await api.addUserWidget(params);\r\n    dispatch({\r\n      type: ADD_USER_WIDGET,\r\n      payload: {\r\n        result: widgetResult.result,\r\n        status: widgetResult.status,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\n\r\nexport function getUserWidgetByUserID(params = {}) {\r\n  return async (dispatch) => {\r\n    const result = await api.getUserWidgetByID(params);\r\n    // the data type would be: \r\n    //\"GetPartDataJson({\"JSonDataFinal\":{\"Block\":{\"Nature\":\"1.00\",\"Interest\":\"3.00\",\"Architecture\":\"3.00...\"\r\n    // to remove GetPartDataJson(\r\n    console.log(result);\r\n    let id = result.result[0].user_id;\r\n    let userWidgets = Object.values(result.result);\r\n    \r\n    dispatch({\r\n      type: GET_USER_WIDGET,\r\n      payload: {\r\n        userId: id,\r\n        userWidget: userWidgets,\r\n      },\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}