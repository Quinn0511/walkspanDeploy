{"ast":null,"code":"import _regeneratorRuntime from\"F:\\\\Project\\\\walkspanDeploy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"F:\\\\Project\\\\walkspanDeploy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import*as api from\"../api/map\";import{GET_PLACE_RESULT}from\"../constants/actions\";export function getPlaceResult(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var placeResult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return api.getPlaceResult(params);case 2:placeResult=_context.sent;//const { viewport } = placeResult.results[0].geometry;\ndispatch({type:GET_PLACE_RESULT,payload:{address:placeResult.results[0].formatted_address,geometry:placeResult.results[0].geometry,bbox:placeResult.results[0].geometry.viewport.southwest.lng+\",\"+placeResult.results[0].geometry.viewport.southwest.lat+\",\"+placeResult.results[0].geometry.viewport.northeast.lng+\",\"+placeResult.results[0].geometry.viewport.northeast.lat}});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();}export function get_WMS_Tile(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var placeResult;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return api.getWMSTile(params);case 2:placeResult=_context2.sent;return _context2.abrupt(\"return\",placeResult);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();}","map":{"version":3,"sources":["F:/Project/walkspanDeploy/src/actions/map.js"],"names":["api","GET_PLACE_RESULT","getPlaceResult","params","dispatch","placeResult","type","payload","address","results","formatted_address","geometry","bbox","viewport","southwest","lng","lat","northeast","get_WMS_Tile","getWMSTile"],"mappings":"2SAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,YAArB,CACA,OAASC,gBAAT,KAAiC,sBAAjC,CAEA,MAAO,SAASC,CAAAA,cAAT,EAAqC,IAAbC,CAAAA,MAAa,2DAAJ,EAAI,CAC1C,+FAAO,iBAAOC,QAAP,wJACqBJ,CAAAA,GAAG,CAACE,cAAJ,CAAmBC,MAAnB,CADrB,QACCE,WADD,eAEL;AACAD,QAAQ,CAAC,CACPE,IAAI,CAAEL,gBADC,CAEPM,OAAO,CAAE,CACPC,OAAO,CAAEH,WAAW,CAACI,OAAZ,CAAoB,CAApB,EAAuBC,iBADzB,CAEPC,QAAQ,CAAEN,WAAW,CAACI,OAAZ,CAAoB,CAApB,EAAuBE,QAF1B,CAGPC,IAAI,CACJP,WAAW,CAACI,OAAZ,CAAoB,CAApB,EAAuBE,QAAvB,CAAgCE,QAAhC,CAAyCC,SAAzC,CAAmDC,GAAnD,CACE,GADF,CAEEV,WAAW,CAACI,OAAZ,CAAoB,CAApB,EAAuBE,QAAvB,CAAgCE,QAAhC,CAAyCC,SAAzC,CAAmDE,GAFrD,CAGE,GAHF,CAIEX,WAAW,CAACI,OAAZ,CAAoB,CAApB,EAAuBE,QAAvB,CAAgCE,QAAhC,CAAyCI,SAAzC,CAAmDF,GAJrD,CAKE,GALF,CAMEV,WAAW,CAACI,OAAZ,CAAoB,CAApB,EAAuBE,QAAvB,CAAgCE,QAAhC,CAAyCI,SAAzC,CAAmDD,GAV9C,CAFF,CAAD,CAAR,CAHK,sDAAP,+DAmBD,CAED,MAAO,SAASE,CAAAA,YAAT,EAAmC,IAAbf,CAAAA,MAAa,2DAAJ,EAAI,CACxC,gGAAO,kBAAOC,QAAP,6JACqBJ,CAAAA,GAAG,CAACmB,UAAJ,CAAehB,MAAf,CADrB,QACCE,WADD,iDAGEA,WAHF,0DAAP,iEAKD","sourcesContent":["import * as api from \"../api/map\";\r\nimport { GET_PLACE_RESULT } from \"../constants/actions\";\r\n\r\nexport function getPlaceResult(params = {}) {\r\n  return async (dispatch) => {\r\n    const placeResult = await api.getPlaceResult(params);\r\n    //const { viewport } = placeResult.results[0].geometry;\r\n    dispatch({\r\n      type: GET_PLACE_RESULT,\r\n      payload: {\r\n        address: placeResult.results[0].formatted_address,\r\n        geometry: placeResult.results[0].geometry,\r\n        bbox:\r\n        placeResult.results[0].geometry.viewport.southwest.lng +\r\n          \",\" +\r\n          placeResult.results[0].geometry.viewport.southwest.lat +\r\n          \",\" +\r\n          placeResult.results[0].geometry.viewport.northeast.lng +\r\n          \",\" +\r\n          placeResult.results[0].geometry.viewport.northeast.lat,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function get_WMS_Tile(params = {}) {\r\n  return async (dispatch) => {\r\n    const placeResult = await api.getWMSTile(params);\r\n    \r\n    return placeResult;\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}