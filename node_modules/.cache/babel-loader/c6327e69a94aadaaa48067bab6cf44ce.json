{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"F:\\\\Project\\\\walkspanDeploy\\\\src\\\\pages\\\\admin\\\\component_of_control_panel\\\\WidgetBoxForUser.js\";\nimport React, { useEffect, useState } from \"react\";\nimport IndividualScore from \"../../widgets/WidgetBox/IndividualScore/IndividualScore\";\nimport ComparisonScore from \"../../widgets/WidgetBox/ComparisonScore/ComparisonScore\";\nimport Map from \"../../widgets/WidgetBox/Map/Map\";\nimport NoResult from \"../../widgets/WidgetBox/noResult\";\nimport GoogleAddressComplete from \"../../../temporary/GoogleAddressComplete\";\nimport { MyContext } from \"../../../temporary/context-manager\";\nimport { getWidget } from \"../../../actions/widget\";\nimport { useDispatch, useMappedState } from \"redux-react-hook\";\n\nconst mapStateWidget = state => state.widget;\n\nconst operationTabList = [{\n  key: \"individual_scores\",\n  tab: /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }, \"Individual Scores\")\n}, {\n  key: \"comparison_scores\",\n  tab: /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, \"Comparison Scores\")\n}, {\n  key: \"map\",\n  tab: /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, \"Map\")\n}];\n\nconst WidgetBoxForUser = props => {\n  const dispatch = useDispatch();\n  const {\n    features,\n    featureScore,\n    checkedView,\n    scope,\n    addressInput\n  } = props;\n  const [address, setAddress] = useState(addressInput);\n  const [featureScores, setFeatureScore] = useState(featureScore);\n  const {\n    widgetResult\n  } = useMappedState(mapStateWidget); //   const { address } = widgetResult;\n\n  const [tabKey, setTabKey] = useState(\"individual_scores\");\n\n  const onTabChange = key => {\n    setTabKey(key);\n  };\n\n  const renderChildrenByTabKey = tabKey => {\n    switch (tabKey) {\n      case \"map\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, JSON.stringify(featureScores) === \"{}\" ? /*#__PURE__*/React.createElement(NoResult, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }\n        }) : /*#__PURE__*/React.createElement(Map, {\n          featuresStatus: features,\n          scope: scope,\n          addressInput: address,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }\n        }));\n\n      case \"comparison_scores\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, JSON.stringify(featureScores) === \"{}\" ? /*#__PURE__*/React.createElement(NoResult, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }) : /*#__PURE__*/React.createElement(ComparisonScore, {\n          featuresStatus: features,\n          featureScore: featureScores,\n          addressInput: address,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        }));\n\n      case \"individual_scores\":\n      default:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }, JSON.stringify(featureScores) === \"{}\" ? /*#__PURE__*/React.createElement(NoResult, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }\n        }) : /*#__PURE__*/React.createElement(IndividualScore, {\n          featuresStatus: features,\n          featureScore: featureScores,\n          checkedView: checkedView,\n          addressInput: address,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }\n        }));\n    }\n  };\n\n  const getFeatureScore = (widgetResult, scopeSelect) => {\n    if (widgetResult === undefined) {\n      return widgetResult;\n    }\n\n    switch (scopeSelect) {\n      case \"quarterMile\":\n        return widgetResult.scores[\"Quarter-Mile\"];\n\n      case \"neighborhood\":\n        return widgetResult.scores.Neighborhood;\n\n      case \"block\":\n      default:\n        return widgetResult.scores.Block;\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getWidget({\n      address: address\n    }));\n  }, [dispatch, address]);\n  useEffect(() => {\n    setFeatureScore(getFeatureScore(widgetResult, scope));\n  }, [widgetResult, scope]); // const getFeatureList = (featureList) => {\n  //   if (featureList === []) {\n  //     return featureList;\n  //   }\n  //   featureList.map((item) => {\n  //     delete item.img_faded;\n  //     delete item.img_new;\n  //   });\n  //   return featureList;\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    title: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Customized Widget for\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, address))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MyContext.Provider, {\n      value: {\n        setAddress\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GoogleAddressComplete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    })))),\n    bordered: true,\n    tabList: operationTabList,\n    activeTabKey: tabKey,\n    onTabChange: onTabChange,\n    style: {\n      minHeight: \"700px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, renderChildrenByTabKey(tabKey))));\n};\n\nexport default WidgetBoxForUser;","map":{"version":3,"sources":["F:/Project/walkspanDeploy/src/pages/admin/component_of_control_panel/WidgetBoxForUser.js"],"names":["React","useEffect","useState","IndividualScore","ComparisonScore","Map","NoResult","GoogleAddressComplete","MyContext","getWidget","useDispatch","useMappedState","mapStateWidget","state","widget","operationTabList","key","tab","WidgetBoxForUser","props","dispatch","features","featureScore","checkedView","scope","addressInput","address","setAddress","featureScores","setFeatureScore","widgetResult","tabKey","setTabKey","onTabChange","renderChildrenByTabKey","JSON","stringify","getFeatureScore","scopeSelect","undefined","scores","Neighborhood","Block","fontWeight","minHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport IndividualScore from \"../../widgets/WidgetBox/IndividualScore/IndividualScore\";\r\nimport ComparisonScore from \"../../widgets/WidgetBox/ComparisonScore/ComparisonScore\";\r\nimport Map from \"../../widgets/WidgetBox/Map/Map\";\r\nimport NoResult from \"../../widgets/WidgetBox/noResult\";\r\nimport GoogleAddressComplete from \"../../../temporary/GoogleAddressComplete\";\r\nimport { MyContext } from \"../../../temporary/context-manager\";\r\nimport { getWidget } from \"../../../actions/widget\";\r\nimport { Card } from \"antd\";\r\nimport { useDispatch, useMappedState } from \"redux-react-hook\";\r\nconst mapStateWidget = (state) => state.widget;\r\n\r\nconst operationTabList = [\r\n  {\r\n    key: \"individual_scores\",\r\n    tab: <span>Individual Scores</span>,\r\n  },\r\n  {\r\n    key: \"comparison_scores\",\r\n    tab: <span>Comparison Scores</span>,\r\n  },\r\n  {\r\n    key: \"map\",\r\n    tab: <span>Map</span>,\r\n  },\r\n];\r\n\r\nconst WidgetBoxForUser = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { features, featureScore, checkedView, scope, addressInput } = props;\r\n  const [address, setAddress] = useState(addressInput);\r\n  const [featureScores, setFeatureScore] = useState(featureScore);\r\n\r\n  const { widgetResult } = useMappedState(mapStateWidget);\r\n  //   const { address } = widgetResult;\r\n  const [tabKey, setTabKey] = useState(\"individual_scores\");\r\n\r\n  const onTabChange = (key) => {\r\n    setTabKey(key);\r\n  };\r\n\r\n  const renderChildrenByTabKey = (tabKey) => {\r\n    switch (tabKey) {\r\n      case \"map\":\r\n        return (\r\n          <div>\r\n            {JSON.stringify(featureScores) === \"{}\" ? (\r\n              <NoResult />\r\n            ) : (\r\n              <Map\r\n                featuresStatus={features}\r\n                scope={scope}\r\n                addressInput={address}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case \"comparison_scores\":\r\n        return (\r\n          <div>\r\n            {JSON.stringify(featureScores) === \"{}\" ? (\r\n              <NoResult />\r\n            ) : (\r\n              <ComparisonScore\r\n                featuresStatus={features}\r\n                featureScore={featureScores}\r\n                addressInput={address}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case \"individual_scores\":\r\n      default:\r\n        return (\r\n          <div>\r\n            {JSON.stringify(featureScores) === \"{}\" ? (\r\n              <NoResult />\r\n            ) : (\r\n              <IndividualScore\r\n                featuresStatus={features}\r\n                featureScore={featureScores}\r\n                checkedView={checkedView}\r\n                addressInput={address}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  const getFeatureScore = (widgetResult, scopeSelect) => {\r\n    if (widgetResult === undefined) {\r\n      return widgetResult;\r\n    }\r\n    switch (scopeSelect) {\r\n      case \"quarterMile\":\r\n        return widgetResult.scores[\"Quarter-Mile\"];\r\n\r\n      case \"neighborhood\":\r\n        return widgetResult.scores.Neighborhood;\r\n\r\n      case \"block\":\r\n      default:\r\n        return widgetResult.scores.Block;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getWidget({ address: address }));\r\n  }, [dispatch, address]);\r\n\r\n  useEffect(() => {\r\n    setFeatureScore(getFeatureScore(widgetResult, scope));\r\n  }, [widgetResult, scope]);\r\n\r\n  // const getFeatureList = (featureList) => {\r\n  //   if (featureList === []) {\r\n  //     return featureList;\r\n  //   }\r\n\r\n  //   featureList.map((item) => {\r\n  //     delete item.img_faded;\r\n  //     delete item.img_new;\r\n  //   });\r\n  //   return featureList;\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card\r\n          title={\r\n            <>\r\n              <div>\r\n                <span>\r\n                  Customized Widget for{\" \"}\r\n                  <span style={{ fontWeight: \"bold\" }}>{address}</span>\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <MyContext.Provider value={{ setAddress }}>\r\n                  <GoogleAddressComplete />\r\n                </MyContext.Provider>\r\n              </div>\r\n            </>\r\n          }\r\n          bordered={true}\r\n          tabList={operationTabList}\r\n          activeTabKey={tabKey}\r\n          onTabChange={onTabChange}\r\n          style={{ minHeight: \"700px\" }}\r\n        >\r\n          {renderChildrenByTabKey(tabKey)}\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WidgetBoxForUser;\r\n"]},"metadata":{},"sourceType":"module"}