{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\walkspanDeploy\\\\src\\\\pages\\\\widgets\\\\WidgetBox\\\\Map\\\\customizeMap.js\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript } from \"@react-google-maps/api\";\nimport mapStyles from \"./mapStyles\";\nconst google = window.google;\nconst libraries = [\"places\"];\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: false,\n  mapTypeControl: true,\n  mapTypeControlOptions: {\n    position: google.maps.ControlPosition.TOP_RIGHT\n  },\n  mapTypeId: google.maps.MapTypeId.ROADMAP,\n  rotateControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  scrollwheel: false,\n  gestureHandling: \"none\"\n};\n\nconst CustomizeMap = params => {\n  const {\n    center = {\n      lat: 40.76778789999999,\n      lng: -73.99174099999999\n    },\n    zoom = 16,\n    featureName = \"\"\n  } = params;\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBOXYeVd2IW4rON6FTyLBesJOG87NE3BJo\",\n    libraries\n  });\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    map.overlayMapTypes.clear();\n    const walkspan_layer = new google.maps.ImageMapType({\n      getTileUrl: function (coord, zoom) {\n        var proj = map.getProjection();\n        var zfactor = Math.pow(2, zoom); // Get Long Lat coordinates\n\n        var top = proj.fromPointToLatLng(new google.maps.Point(coord.x * 256 / zfactor, coord.y * 256 / zfactor));\n        var bot = proj.fromPointToLatLng(new google.maps.Point((coord.x + 1) * 256 / zfactor, (coord.y + 1) * 256 / zfactor)); // Create the Bounding box string\n\n        var bbox = top.lng() + \",\" + bot.lat() + \",\" + bot.lng() + \",\" + top.lat(); // Build WMS URL\n\n        var url = \"http://18.217.77.37:8080/geoserver/walkspan/wms?\";\n        url += \"&REQUEST=GetMap\";\n        url += \"&SERVICE=WMS\";\n        url += \"&VERSION=1.1.1\";\n        url += \"&LAYERS=walkspan:walkspan\";\n        url += \"&FORMAT=image/png\";\n        url += \"&BGCOLOR=0xFFFFFF\";\n        url += \"&TRANSPARENT=TRUE\";\n        url += \"&SRS=EPSG:4326\";\n        url += \"&BBOX=\" + bbox;\n        url += \"&WIDTH=256\";\n        url += \"&HEIGHT=256\";\n        url += \"&STYLES=\" + featureName + \"Walkspan\";\n        url += \"&CQL_FILTER=objtype='NO'\";\n        return url;\n      },\n      tileSize: new google.maps.Size(256, 256),\n      isPng: true,\n      name: \"WalkspanLayer\"\n    });\n    map.overlayMapTypes.push(walkspan_layer);\n    mapRef.current = map;\n  }, [featureName]);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n  return params && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    zoom: zoom,\n    mapContainerStyle: {\n      width: \"100%\",\n      height: \"600px\"\n    },\n    center: center,\n    options: options,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default CustomizeMap;","map":{"version":3,"sources":["F:/Project/walkspanDeploy/src/pages/widgets/WidgetBox/Map/customizeMap.js"],"names":["React","GoogleMap","useLoadScript","mapStyles","google","window","libraries","options","styles","disableDefaultUI","zoomControl","mapTypeControl","mapTypeControlOptions","position","maps","ControlPosition","TOP_RIGHT","mapTypeId","MapTypeId","ROADMAP","rotateControl","scaleControl","streetViewControl","scrollwheel","gestureHandling","CustomizeMap","params","center","lat","lng","zoom","featureName","isLoaded","loadError","googleMapsApiKey","mapRef","useRef","onMapLoad","useCallback","map","overlayMapTypes","clear","walkspan_layer","ImageMapType","getTileUrl","coord","proj","getProjection","zfactor","Math","pow","top","fromPointToLatLng","Point","x","y","bot","bbox","url","tileSize","Size","isPng","name","push","current","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { GoogleMap, useLoadScript } from \"@react-google-maps/api\";\r\nimport mapStyles from \"./mapStyles\";\r\n\r\nconst google = window.google;\r\nconst libraries = [\"places\"];\r\n\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: false,\r\n  mapTypeControl: true,\r\n  mapTypeControlOptions: {\r\n    position: google.maps.ControlPosition.TOP_RIGHT,\r\n  },\r\n  mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n  rotateControl: false,\r\n  scaleControl: false,\r\n  streetViewControl: false,\r\n  scrollwheel: false,\r\n  gestureHandling: \"none\",\r\n};\r\n\r\nconst CustomizeMap = (params) => {\r\n  const {\r\n    center = {\r\n      lat: 40.76778789999999,\r\n      lng: -73.99174099999999,\r\n    },\r\n    zoom = 16,\r\n    featureName = \"\",\r\n  } = params;\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyBOXYeVd2IW4rON6FTyLBesJOG87NE3BJo\",\r\n    libraries,\r\n  });\r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback(\r\n    (map) => {\r\n      map.overlayMapTypes.clear();\r\n      const walkspan_layer = new google.maps.ImageMapType({\r\n        getTileUrl: function (coord, zoom) {\r\n          var proj = map.getProjection();\r\n          var zfactor = Math.pow(2, zoom);\r\n\r\n          // Get Long Lat coordinates\r\n          var top = proj.fromPointToLatLng(\r\n            new google.maps.Point(\r\n              (coord.x * 256) / zfactor,\r\n              (coord.y * 256) / zfactor\r\n            )\r\n          );\r\n          var bot = proj.fromPointToLatLng(\r\n            new google.maps.Point(\r\n              ((coord.x + 1) * 256) / zfactor,\r\n              ((coord.y + 1) * 256) / zfactor\r\n            )\r\n          );\r\n\r\n          // Create the Bounding box string\r\n          var bbox =\r\n            top.lng() + \",\" + bot.lat() + \",\" + bot.lng() + \",\" + top.lat();\r\n\r\n          // Build WMS URL\r\n          var url = \"http://18.217.77.37:8080/geoserver/walkspan/wms?\";\r\n          url += \"&REQUEST=GetMap\";\r\n          url += \"&SERVICE=WMS\";\r\n          url += \"&VERSION=1.1.1\";\r\n          url += \"&LAYERS=walkspan:walkspan\";\r\n          url += \"&FORMAT=image/png\";\r\n          url += \"&BGCOLOR=0xFFFFFF\";\r\n          url += \"&TRANSPARENT=TRUE\";\r\n          url += \"&SRS=EPSG:4326\";\r\n          url += \"&BBOX=\" + bbox;\r\n          url += \"&WIDTH=256\";\r\n          url += \"&HEIGHT=256\";\r\n          url += \"&STYLES=\" + featureName + \"Walkspan\";\r\n          url += \"&CQL_FILTER=objtype='NO'\";\r\n\r\n          return url;\r\n        },\r\n        tileSize: new google.maps.Size(256, 256),\r\n        isPng: true,\r\n        name: \"WalkspanLayer\",\r\n      });\r\n      map.overlayMapTypes.push(walkspan_layer);\r\n      mapRef.current = map;\r\n    },\r\n    [featureName]\r\n  );\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading maps\";\r\n  return (\r\n    params && (\r\n      <div>\r\n        <GoogleMap\r\n          zoom={zoom}\r\n          mapContainerStyle={{\r\n            width: \"100%\",\r\n            height: \"600px\",\r\n          }}\r\n          center={center}\r\n          options={options}\r\n          onLoad={onMapLoad}\r\n        ></GoogleMap>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default CustomizeMap;\r\n"]},"metadata":{},"sourceType":"module"}