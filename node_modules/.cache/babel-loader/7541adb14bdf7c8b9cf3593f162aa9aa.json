{"ast":null,"code":"import * as api from \"../api/data\";\nimport { GET_DATA } from \"../constants/actions\";\nexport function getData(params = {}) {\n  return async dispatch => {\n    const result = await api.getData(params);\n    var res = result.slice(34, result.length - 1).toString().split(\"\\\\\").join(\"\").replace(\"[\", \"\").replace(\"]\", \"\");\n    var array = res.split(\"}\");\n    var jarray = [];\n    var score = [];\n    var areaname = [];\n    var latitude = [];\n    var longitude = [];\n\n    for (var i = 0; i < 10; i++) {\n      if (i === 0) {\n        jarray[i] = JSON.parse(array[i] + \"}\");\n      } else {\n        jarray[i] = JSON.parse(array[i].slice(1, array[i].length - 1) + \"\\\"}\");\n      }\n\n      score[i] = jarray[i]['Score'];\n      areaname[i] = jarray[i]['Area Name'];\n      latitude[i] = jarray[i]['Latitude'];\n      longitude[i] = jarray[i]['Longitude'];\n    } // console.log(jarray[0]);\n\n\n    dispatch({\n      type: GET_DATA,\n      payload: {\n        city: params.city,\n        category: params.category,\n        areatype: params.areatype,\n        score: score,\n        areaname: areaname,\n        latitude: latitude,\n        longitude: longitude\n      }\n    });\n  };\n}","map":{"version":3,"sources":["F:/Project/walkspanDeploy/src/actions/data.js"],"names":["api","GET_DATA","getData","params","dispatch","result","res","slice","length","toString","split","join","replace","array","jarray","score","areaname","latitude","longitude","i","JSON","parse","type","payload","city","category","areatype"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,aAArB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAM,GAAG,EAA1B,EAA8B;AACnC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,MAAM,GAAG,MAAML,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAArB;AAEA,QAAIG,GAAG,GAAGD,MAAM,CAACE,KAAP,CAAa,EAAb,EAAgBF,MAAM,CAACG,MAAP,GAAgB,CAAhC,EAAmCC,QAAnC,GAA8CC,KAA9C,CAAoD,IAApD,EAA0DC,IAA1D,CAA+D,EAA/D,EAAmEC,OAAnE,CAA2E,GAA3E,EAA+E,EAA/E,EAAmFA,OAAnF,CAA2F,GAA3F,EAA+F,EAA/F,CAAV;AACA,QAAIC,KAAK,GAAGP,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAZ;AACA,QAAII,MAAM,GAAG,EAAb;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAG,EAAlB,EAAqBA,CAAC,EAAtB,EAAyB;AACvB,UAAGA,CAAC,KAAK,CAAT,EAAW;AACTL,QAAAA,MAAM,CAACK,CAAD,CAAN,GAAYC,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACM,CAAD,CAAL,GAAW,GAAtB,CAAZ;AACD,OAFD,MAGI;AACFL,QAAAA,MAAM,CAACK,CAAD,CAAN,GAAYC,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACM,CAAD,CAAL,CAASZ,KAAT,CAAe,CAAf,EAAiBM,KAAK,CAACM,CAAD,CAAL,CAASX,MAAT,GAAkB,CAAnC,IAAwC,KAAnD,CAAZ;AACD;;AACDO,MAAAA,KAAK,CAACI,CAAD,CAAL,GAAWL,MAAM,CAACK,CAAD,CAAN,CAAU,OAAV,CAAX;AACAH,MAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcL,MAAM,CAACK,CAAD,CAAN,CAAU,WAAV,CAAd;AACAF,MAAAA,QAAQ,CAACE,CAAD,CAAR,GAAcL,MAAM,CAACK,CAAD,CAAN,CAAU,UAAV,CAAd;AACAD,MAAAA,SAAS,CAACC,CAAD,CAAT,GAAeL,MAAM,CAACK,CAAD,CAAN,CAAU,WAAV,CAAf;AACD,KArBwB,CAsBzB;;;AACAf,IAAAA,QAAQ,CAAC;AACPkB,MAAAA,IAAI,EAAErB,QADC;AAEPsB,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAErB,MAAM,CAACqB,IADN;AAEPC,QAAAA,QAAQ,EAAEtB,MAAM,CAACsB,QAFV;AAGPC,QAAAA,QAAQ,EAAEvB,MAAM,CAACuB,QAHV;AAIPX,QAAAA,KAAK,EAAEA,KAJA;AAKPC,QAAAA,QAAQ,EAAEA,QALH;AAMPC,QAAAA,QAAQ,EAAEA,QANH;AAOPC,QAAAA,SAAS,EAAEA;AAPJ;AAFF,KAAD,CAAR;AAYD,GAnCD;AAoCD","sourcesContent":["import * as api from \"../api/data\";\r\nimport { GET_DATA } from \"../constants/actions\";\r\n\r\nexport function getData(params = {}) {\r\n  return async (dispatch) => {\r\n    const result = await api.getData(params);\r\n\r\n    var res = result.slice(34,result.length - 1).toString().split(\"\\\\\").join(\"\").replace(\"[\",\"\").replace(\"]\",\"\");\r\n    var array = res.split(\"}\");\r\n    var jarray = [];\r\n    var score = [];\r\n    var areaname = [];\r\n    var latitude = [];\r\n    var longitude = [];\r\n    for(var i = 0;i < 10;i++){\r\n      if(i === 0){\r\n        jarray[i] = JSON.parse(array[i] + \"}\");\r\n      }\r\n      else{\r\n        jarray[i] = JSON.parse(array[i].slice(1,array[i].length - 1) + \"\\\"}\");\r\n      }\r\n      score[i] = jarray[i]['Score'];\r\n      areaname[i] = jarray[i]['Area Name'];\r\n      latitude[i] = jarray[i]['Latitude'];\r\n      longitude[i] = jarray[i]['Longitude'];\r\n    }\r\n    // console.log(jarray[0]);\r\n    dispatch({\r\n      type: GET_DATA,\r\n      payload: {\r\n        city: params.city,\r\n        category: params.category,\r\n        areatype: params.areatype,\r\n        score: score,\r\n        areaname: areaname,\r\n        latitude: latitude,\r\n        longitude: longitude,\r\n      },\r\n    });\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}