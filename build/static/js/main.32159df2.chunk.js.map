{"version":3,"sources":["constants/actions.js","pages/widgets/WidgetBox/Map/customizeMap.js","pages/widgets/WidgetBox/Map/mapStyles.js","App.js","serviceWorker.js","reducers/widget.js","reducers/api.js","reducers/data.js","reducers/map.js","reducers/contact.js","reducers/login.js","reducers/register.js","reducers/user_profile.js","reducers/api_key.js","reducers/index.js","index.js"],"names":["GET_WIDGET","GET_API","GET_DATA","GET_PLACE_RESULT","GET_USER_WIDGET","ADD_USER_WIDGET","ADD_CONTACT_MESSAGE","ADD_LOGIN","ADD_REGISTER","GET_USER_PROFILE","GET_APIKEY","google","window","libraries","options","styles","featureType","elementType","stylers","visibility","hue","disableDefaultUI","zoomControl","mapTypeControl","mapTypeControlOptions","position","maps","ControlPosition","TOP_RIGHT","mapTypeId","MapTypeId","ROADMAP","rotateControl","scaleControl","streetViewControl","scrollwheel","gestureHandling","CustomizeMap","params","center","lat","lng","zoom","featureName","useLoadScript","googleMapsApiKey","isLoaded","loadError","mapRef","React","useRef","onMapLoad","useCallback","map","overlayMapTypes","clear","walkspan_layer","ImageMapType","getTileUrl","coord","proj","getProjection","zfactor","Math","pow","top","fromPointToLatLng","Point","x","y","bot","url","tileSize","Size","isPng","name","push","current","mapContainerStyle","width","height","onLoad","HomePage","lazy","UsersPage","NotFoundPage","APIPage","DataPage","WidgetsPage","AdminPage","LoginPage","SignupPage","ContactPage","App","fallback","className","size","exact","path","component","MapPage","to","Component","Boolean","location","hostname","match","initState","rootReducer","combineReducers","widget","state","action","payload","address","scores","userId","userWidget","result","status","type","widgetResult","userWidgetResult","addUserWidgetResult","api","feature","scope","request","APIResult","data","city","category","areatype","score","areaname","latitude","longitude","DATAResult","geometry","bbox","placeResult","contact","PostContactMessageResult","login","userInfo","LoginResult","register","PostRegisterResult","user_profile","getProfileResult","api_key","GetApikeyResult","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Provider","value","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32159df2.chunk.js","sourcesContent":["export const GET_WIDGET = 'SenseOfWalkAPI_war/widget';\r\n\r\nexport const GET_API = 'SenseOfWalkAPI_war/api';\r\n\r\nexport const GET_DATA = 'SenseOfWalkAPI_war/data';\r\n\r\nexport const GET_PLACE_RESULT = 'maps.googleapis.com/maps/api/place/textsearch/json';\r\n\r\nexport const GET_USER_WIDGET = 'SenseOfWalkAPI_war/mywidget';\r\n\r\nexport const ADD_USER_WIDGET = 'SenseOfWalkAPI_war/mywidget/post';\r\n\r\nexport const ADD_CONTACT_MESSAGE = 'SenseOfWalkAPI_war/contact';\r\n\r\nexport const ADD_LOGIN = 'SenseOfWalkAPI_war/login';\r\n\r\nexport const ADD_REGISTER = 'SenseOfWalkAPI_war/register';\r\n\r\nexport const GET_USER_PROFILE = 'SenseOfWalkAPI_war/get_user_profile';\r\n\r\nexport const GET_APIKEY = 'SenseOfWalkAPI_war/apikey_access';","import React from \"react\";\r\nimport { GoogleMap, useLoadScript } from \"@react-google-maps/api\";\r\nimport mapStyles from \"./mapStyles\";\r\n\r\nconst google = window.google;\r\nconst libraries = [\"places\"];\r\n\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: false,\r\n  mapTypeControl: true,\r\n  mapTypeControlOptions: {\r\n    position: google.maps.ControlPosition.TOP_RIGHT,\r\n  },\r\n  mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n  rotateControl: false,\r\n  scaleControl: false,\r\n  streetViewControl: false,\r\n  scrollwheel: false,\r\n  gestureHandling: \"none\",\r\n};\r\n\r\nconst CustomizeMap = (params) => {\r\n  const {\r\n    center = {\r\n      lat: 40.76778789999999,\r\n      lng: -73.99174099999999,\r\n    },\r\n    zoom = 16,\r\n    featureName = \"\",\r\n  } = params;\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyBOXYeVd2IW4rON6FTyLBesJOG87NE3BJo\",\r\n    libraries,\r\n  });\r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback(\r\n    (map) => {\r\n      map.overlayMapTypes.clear();\r\n      const walkspan_layer = new google.maps.ImageMapType({\r\n        getTileUrl: function (coord, zoom) {\r\n          var proj = map.getProjection();\r\n          var zfactor = Math.pow(2, zoom);\r\n\r\n          // Get Long Lat coordinates\r\n          var top = proj.fromPointToLatLng(\r\n            new google.maps.Point(\r\n              (coord.x * 256) / zfactor,\r\n              (coord.y * 256) / zfactor\r\n            )\r\n          );\r\n          var bot = proj.fromPointToLatLng(\r\n            new google.maps.Point(\r\n              ((coord.x + 1) * 256) / zfactor,\r\n              ((coord.y + 1) * 256) / zfactor\r\n            )\r\n          );\r\n\r\n          // Create the Bounding box string\r\n          var bbox =\r\n            top.lng() + \",\" + bot.lat() + \",\" + bot.lng() + \",\" + top.lat();\r\n\r\n          // Build WMS URL\r\n          var url = \"http://18.217.77.37:8080/geoserver/walkspan/wms?\";\r\n          url += \"&REQUEST=GetMap\";\r\n          url += \"&SERVICE=WMS\";\r\n          url += \"&VERSION=1.1.1\";\r\n          url += \"&LAYERS=walkspan:walkspan\";\r\n          url += \"&FORMAT=image/png\";\r\n          url += \"&BGCOLOR=0xFFFFFF\";\r\n          url += \"&TRANSPARENT=TRUE\";\r\n          url += \"&SRS=EPSG:4326\";\r\n          url += \"&BBOX=\" + bbox;\r\n          url += \"&WIDTH=256\";\r\n          url += \"&HEIGHT=256\";\r\n          url += \"&STYLES=\" + featureName + \"Walkspan\";\r\n          url += \"&CQL_FILTER=objtype='NO'\";\r\n\r\n          return url;\r\n        },\r\n        tileSize: new google.maps.Size(256, 256),\r\n        isPng: true,\r\n        name: \"WalkspanLayer\",\r\n      });\r\n      map.overlayMapTypes.push(walkspan_layer);\r\n      mapRef.current = map;\r\n    },\r\n    [featureName]\r\n  );\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading maps\";\r\n  return (\r\n    params && (\r\n      <div>\r\n        <GoogleMap\r\n          zoom={zoom}\r\n          mapContainerStyle={{\r\n            width: \"100%\",\r\n            height: \"600px\",\r\n          }}\r\n          center={center}\r\n          options={options}\r\n          onLoad={onMapLoad}\r\n        ></GoogleMap>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default CustomizeMap;\r\n","export default [\r\n  {\r\n    featureType: \"administrative.country\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        visibility: \"simplified\",\r\n      },\r\n      {\r\n        hue: \"#ff0000\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","/*App.js*/\r\nimport React, { Component, lazy, Suspense } from \"react\";\r\nimport \"./App.css\";\r\n//Import all needed Component for this tutorial\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport MapPage from \"./pages/widgets/WidgetBox/Map/customizeMap\";\r\n\r\nconst HomePage = lazy(() => import(\"./pages/homepage/homepage\"));\r\nconst UsersPage = lazy(() => import(\"./pages/users\"));\r\nconst NotFoundPage = lazy(() => import(\"./pages/404\"));\r\nconst APIPage = lazy(() => import(\"./pages/api/apipage\"));\r\nconst DataPage = lazy(() => import(\"./pages/data/datapage\"));\r\nconst WidgetsPage = lazy(() => import(\"./pages/widgets/widgetspage\"));\r\nconst AdminPage = lazy(() => import(\"./pages/admin/AdminPage\"));\r\nconst LoginPage = lazy(() => import(\"./pages/login/LoginPage\"));\r\nconst SignupPage = lazy(() => import(\"./pages/login/SignupPage\"));\r\nconst ContactPage = lazy(() => import(\"./pages/contact/contact\"));\r\n// const MapPage = lazy(() => import(\"./pages/widgets/WidgetBox/Map/customizeMap\"));\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"spinWrap\">\r\n              <Spin size=\"large\" />\r\n            </div>\r\n          }\r\n        >\r\n          <Switch>\r\n            {/*All our Routes goes here!*/}\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/data\" component={DataPage} />\r\n            <Route exact path=\"/api\" component={APIPage} />\r\n            <Route exact path=\"/widgets\" component={WidgetsPage} />\r\n            <Route exact path=\"/contact\" component={ContactPage} />\r\n            <Route exact path=\"/users\" component={UsersPage} />\r\n            <Route exact path=\"/admin\" component={AdminPage} />\r\n            <Route exact path=\"/404\" component={NotFoundPage} />\r\n            <Route exact path=\"/login\" component={LoginPage} />\r\n            <Route exact path=\"/signup\" component={SignupPage} />\r\n            <Route exact path=\"/map\" component={MapPage} />\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </Suspense>{\" \"}\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","  import { GET_WIDGET, GET_USER_WIDGET, ADD_USER_WIDGET} from \"../constants/actions\";\r\n\r\nconst initState = {};\r\n\r\nexport default function reducer(state = initState, action) {\r\n  const { address, scores, userId, userWidget, result, status   } = action.payload || {};\r\n  switch (action.type) {\r\n    case GET_WIDGET:\r\n      return {\r\n        ...state,\r\n        widgetResult: {\r\n          address,\r\n          scores,\r\n        }\r\n      };\r\n\r\n      case GET_USER_WIDGET:\r\n      return {\r\n        ...state,\r\n        userWidgetResult: {\r\n          userId,\r\n          userWidget,\r\n        }\r\n      };\r\n\r\n      case ADD_USER_WIDGET: \r\n      return {\r\n        ...state,\r\n        addUserWidgetResult: {\r\n          result,\r\n          status,\r\n        }\r\n      }\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_API } from \"../constants/actions\";\r\n\r\nconst initState = {};\r\n\r\nexport default function reducer(state = initState, action) {\r\n  const { address, feature, scope, scores, request } = action.payload || {};\r\n  switch (action.type) {\r\n    case GET_API:\r\n      return {\r\n        ...state,\r\n        APIResult: {\r\n          address,\r\n          feature,\r\n          scope,\r\n          scores,\r\n          request,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_DATA } from \"../constants/actions\";\r\n\r\nconst initState = {};\r\n\r\nexport default function reducer(state = initState, action) {\r\n  const { city, category, areatype, score, areaname, latitude, longitude } = action.payload || {};\r\n  switch (action.type) {\r\n    case GET_DATA:\r\n      return {\r\n        ...state,\r\n        DATAResult: {\r\n          city,\r\n          category,\r\n          areatype,\r\n          score,\r\n          areaname,\r\n          latitude,\r\n          longitude,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","  import { GET_PLACE_RESULT} from \"../constants/actions\";\r\n\r\nconst initState = {};\r\n\r\nexport default function reducer(state = initState, action) {\r\n  const { address, geometry, bbox  } = action.payload || {};\r\n  switch (action.type) {\r\n    case GET_PLACE_RESULT:\r\n      return {\r\n        ...state,\r\n        placeResult: {\r\n          address,\r\n          geometry,\r\n          bbox\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ADD_CONTACT_MESSAGE } from \"../constants/actions\";\r\n\r\nconst initState = {};\r\n\r\nexport default function reducer(state = initState, action) {\r\n  const { result, status } = action.payload || {};\r\n  switch (action.type) {\r\n    case ADD_CONTACT_MESSAGE:\r\n      return {\r\n        ...state,\r\n        PostContactMessageResult: {\r\n            result,\r\n            status,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ADD_LOGIN } from \"../constants/actions\";\r\n\r\nconst initState = {};\r\n\r\nexport default function reducer(state = initState, action) {\r\n  const { status, userInfo  } = action.payload || {};\r\n  switch (action.type) {\r\n    case ADD_LOGIN:\r\n      return {\r\n        ...state,\r\n        LoginResult: {\r\n          status,\r\n          userInfo\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ADD_REGISTER } from \"../constants/actions\";\r\n\r\nconst initState = {};\r\n\r\nexport default function reducer(state = initState, action) {\r\n  const { status, result  } = action.payload || {};\r\n  switch (action.type) {\r\n    case ADD_REGISTER:\r\n      return {\r\n        ...state,\r\n        PostRegisterResult: {\r\n          status,\r\n          result\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_USER_PROFILE } from \"../constants/actions\";\r\n\r\nconst initState = {};\r\n\r\nexport default function reducer(state = initState, action) {\r\n  const { status, user_profile  } = action.payload || {};\r\n  switch (action.type) {\r\n    case GET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        getProfileResult: {\r\n          status,\r\n          user_profile,\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_APIKEY } from '../constants/actions';\r\n\r\nconst initState = {};\r\n\r\nexport default function reducer(state = initState, action){\r\n    const {status, result} = action.payload || {};\r\n    switch (action.type){\r\n        case GET_APIKEY:\r\n            return{\r\n                ...state,\r\n                GetApikeyResult:{\r\n                    status,\r\n                    result\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport widget from \"./widget\";\r\nimport api from \"./api\";\r\nimport data from \"./data\";\r\nimport map from \"./map\";\r\nimport contact from \"./contact\";\r\nimport login from \"./login\";\r\nimport register from \"./register\";\r\nimport user_profile from './user_profile';\r\nimport api_key from './api_key';\r\n\r\nconst rootReducer = combineReducers({\r\n  widget,\r\n  api,\r\n  data,\r\n  map,\r\n  contact,\r\n  login,\r\n  register,\r\n  user_profile,\r\n  api_key,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { StoreContext } from 'redux-react-hook';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <App />\r\n  </StoreContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}